using System;
using System.Diagnostics.SymbolStore;

class Alpha // базовый класс с закрытым и защищенныи полем
{
    private int num; //закрытое целочисленное поле
    protected char symb;  // защищенное символьное
    public int getNum() // открытый метод для считывания значения целочисленного поля
    {
        return num;
    }
    public char getSymb() //Открытый метод для считывания значения символьного поля
    {
        return symb;
    }
    public void setNum(int n) // открытый метод для присваивания значения целочисленному полю
    {
        num = n;
    }
    public void setSymb(char s) // открытый метод для присваивания значения символьному полю
    {
        symb = s;
    }
}
class Bravo : Alpha //производный класс
{
    public char symbol //открытое символьное свойство
    {
        get //Аксессор для считывания значения свойства
        {
            return symb; //обращение к защищенному наследованному полю
        }
        set  // Аксессор для присваивания значения свойству
        {
            symb = value; //обращение к защищенному унаследованному полю
        }
    }
    public int number //открытое целочисленное свойство
    {
        get   //аксессор для считывания значения свойства 
        {
            return getNum(); //возвращающего значение закрытого поля из базовго класса
        }
        set //аксессор для присваивания значения свойству
        {
            setNum(value); // вызов открытого унаследованного метода для присваивания значения закрытому полю из базового класса
        }
    }
}
class PrivateAndProtectedDemo 
{
    static void Main() 
    {
        Alpha A = new Alpha(); //создание обьекта базвого класса
        A.setNum(100);  // вызов метода для присваивания значения целочисленному полю
        A.setSymb('A');  // вызов метода для присваивания значения символьному полю
        Console.WriteLine("Object A: {0} and {1}", A.getNum(), A.getSymb()); //вызов методов для считывания значений полей
        Bravo B = new Bravo();//создание обьекта производного класса
        B.setNum(200); // вызов метода для присваивания значения целочисленному полю
        B.setSymb('B'); // вызов метода для присваивания значения символьному полю
        Console.WriteLine("Object B: {0} and {1}", B.getNum(), B.getSymb()); // вызов методов для считывания значений полей
        B.number = 300; // присваивание значения целочисленному свойству
        B.symbol = 'C'; // присваивание значения символьному свойству
        Console.WriteLine("Object B: {0} and {1}", B.number, B.symbol); // считывание значение свойств
    }
}